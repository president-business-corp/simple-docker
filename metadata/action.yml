inputs:
  image-name:
    description: 'Name of image. Defaults to "repository_owner/default-image"'
    default: '${{ github.repository_owner }}/default-image'
    required: true
  registry:
    description: 'URL of the registry. Defaults to "ghcr.io"'
    default: 'ghcr.io'
  file:
    description: 'Path and name of Dockerfile. Defaults to "Dockerfile"'
    default: 'Dockerfile'
  description:
    description: 'Description to appear on the Docker image page. Defaults to repository description'
    default: '${{ github.event.repository.description }}'
  documentation:
    description: 'Documentation link for image README. Defaults to repository README'
  url:
    description: 'URL where users can learn more about the image. Defaults to repository owner URL'
    default: '${{ github.event.repository.owner.html_url }}'
  licenses:
    description: 'Comma separated array of SPDX license ids for the image. Defaults to repository license'
    default: '${{ github.event.repository.license.spdx_id }}'
  default-branch-label:
    description: 'Label for changes to the default branch. Defaults to "edge"'
    default: 'edge'
  schedule-label:
    description: 'Label for scheduled / nigtly build. Defaults to "nightly"'
    default: 'nightly'
outputs:
  labels:
    description: "OCI Labels"
    value: ${{ steps.metadata.outputs.labels }}
  tags:
    description: "Docker Tags"
    value: ${{ steps.metadata.outputs.tags }}
  file:
    description: "Dockerfile location"
    value: ${{ steps.metadata.outputs.file }}
  created:
    description: "OCI Created At Date"
    value: ${{ steps.metadata.outputs.created }}
  version:
    description: "Docker image version"
    value: ${{ steps.metadata.outputs.version }}
runs:
  using: "composite"
  steps: 
    - id: metadata
      shell: bash
      run: |
          DOCKER_IMAGE=${{ inputs.registry }}/${{ inputs.image-name }}
          CREATED=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          FILE=${{ inputs.schedule-label }}
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          README=${{ inputs.documentation }}
          if [ -z $README ]; then
            README="${{ github.event.repository.html_url }}/blob/${BRANCH}/README.md"
          fi

          LABELS="org.opencontainers.image.revision=${GITHUB_SHA}"
          LABELS="$LABELS,org.opencontainers.image.created=${CREATED}"
          LABELS="$LABELS,com.github.repo.branch=${BRANCH}"
          
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=${{ inputs.schedule-label }}
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=${{ inputs.default-branch-label }}
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
            LABELS="$LABELS,com.github.repo.pr=${{ github.event.number }}"
          fi

          LABELS="$LABELS,org.opencontainers.image.version=${VERSION}"
          TAGS="${DOCKER_IMAGE}:${VERSION}"

          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi

          LABELS="$LABELS,org.opencontainers.image.title=${{ github.event.repository.name }}"
          LABELS="$LABELS,org.opencontainers.image.description=${{ inputs.description }}"
          LABELS="$LABELS,org.opencontainers.image.documentation=${README}"
          LABELS="$LABELS,org.opencontainers.image.url=${{ inputs.url }}"
          LABELS="$LABELS,org.opencontainers.image.source=${{ github.event.repository.html_url }}"
          LABELS="$LABELS,org.opencontainers.image.licenses=${{ inputs.licenses }}"
          LABELS="$LABELS,com.github.repo.dockerfile=${FILE}"
          # Actions
          LABELS="$LABELS,com.github.actions.id=${GITHUB_ACTION}"
          LABELS="$LABELS,com.github.actions.run_id=${GITHUB_RUN_ID}"
          LABELS="$LABELS,com.github.actions.run_number=${GITHUB_RUN_NUMBER}"
          LABELS="$LABELS,com.github.actions.actor=${GITHUB_ACTOR}"

          BUILD_ARGS="BRANCH=$BRANCH"

          echo ::set-output name=args::${BUILD_ARGS}
          echo ::set-output name=labels::${LABELS}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=file::${FILE}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
