name: Docker Build and Publish

on:
  schedule:
    - cron: '0 10 * * *' # everyday at 10am
  push:
    branches: 
      - trunk
    tags:
      - 'v*.*.*'
  pull_request_target:
    branches: 
      - trunk

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: ${{ github.repository_owner }}/simple-docker
  # TODO: Set registry. Use docker.io for DockerHub
  REGISTRY: ghcr.io
  DOCKERFILE_PATH: Dockerfile

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Prepare Metadata
        id: metadata
        run: |
          DOCKER_IMAGE=$REGISTRY/$IMAGE_NAME

          # lowercase the image name
          DOCKER_IMAGE=$(echo $DOCKER_IMAGE | tr '[A-Z]' '[a-z]')

          VERSION=dev

          # always tag the sha
          TAGS="${DOCKER_IMAGE}:${GITHUB_SHA}"

          # always include the sha as a label
          LABELS="org.opencontainers.image.revision=$GITHUB_SHA"

          # git tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi

          # nightly scheduled build
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          fi

          # pull request
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # only publish PRs to GHCR
            PR_NUMBER=$(echo ${{ github.ref }} | sed -r 's/^refs\/pull\/([0-9]+)\/merge/\1/')
            LABELS="$LABELS,com.github.repo.pr=$PR_NUMBER"
            VERSION=pr-$PR_NUMBER
          fi

          TAGS="$TAGS,${DOCKER_IMAGE}:${VERSION}"

          # semver release, also update latest
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi

          echo ::set-output name=tags::${TAGS}

          # branch name
          BRANCH=$(git rev-parse --abbrev-ref HEAD)

          LABELS="$LABELS,org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          LABELS="$LABELS,org.opencontainers.image.version=$VERSION"
          LABELS="$LABELS,com.github.repo.branch=$BRANCH"
          LABELS="$LABELS,com.github.repo.dockerfile=$DOCKERFILE_PATH"

          # Actions metadata
          LABELS="$LABELS,com.github.actions.id=$GITHUB_ACTION"
          LABELS="$LABELS,com.github.actions.run_id=$GITHUB_RUN_ID"
          LABELS="$LABELS,com.github.actions.run_number=$GITHUB_RUN_NUMBER"
          LABELS="$LABELS,com.github.actions.actor=$GITHUB_ACTOR"
          echo ::set-output name=labels::${LABELS}

          BUILD_ARGS="BRANCH=$BRANCH"
          echo ::set-output name=args::${BUILD_ARGS}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to ${{ env.REGISTRY }}
        uses: docker/login-action@v1 
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          build-args: ${{ steps.metadata.outputs.args }}
          labels: ${{ steps.metadata.outputs.labels }}
